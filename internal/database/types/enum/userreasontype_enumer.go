// Code generated by "enumer -type=UserReasonType -trimprefix=UserReasonType"; DO NOT EDIT.

package enum

import (
	"fmt"
	"strings"
)

const _UserReasonTypeName = "ProfileFriendOutfitGroupCondoChatFavoritesBadgesCreationsOthers"

var _UserReasonTypeIndex = [...]uint8{0, 7, 13, 19, 24, 29, 33, 42, 48, 57, 63}

const _UserReasonTypeLowerName = "profilefriendoutfitgroupcondochatfavoritesbadgescreationsothers"

func (i UserReasonType) String() string {
	if i < 0 || i >= UserReasonType(len(_UserReasonTypeIndex)-1) {
		return fmt.Sprintf("UserReasonType(%d)", i)
	}
	return _UserReasonTypeName[_UserReasonTypeIndex[i]:_UserReasonTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _UserReasonTypeNoOp() {
	var x [1]struct{}
	_ = x[UserReasonTypeProfile-(0)]
	_ = x[UserReasonTypeFriend-(1)]
	_ = x[UserReasonTypeOutfit-(2)]
	_ = x[UserReasonTypeGroup-(3)]
	_ = x[UserReasonTypeCondo-(4)]
	_ = x[UserReasonTypeChat-(5)]
	_ = x[UserReasonTypeFavorites-(6)]
	_ = x[UserReasonTypeBadges-(7)]
	_ = x[UserReasonTypeCreations-(8)]
	_ = x[UserReasonTypeOthers-(9)]
}

var _UserReasonTypeValues = []UserReasonType{UserReasonTypeProfile, UserReasonTypeFriend, UserReasonTypeOutfit, UserReasonTypeGroup, UserReasonTypeCondo, UserReasonTypeChat, UserReasonTypeFavorites, UserReasonTypeBadges, UserReasonTypeCreations, UserReasonTypeOthers}

var _UserReasonTypeNameToValueMap = map[string]UserReasonType{
	_UserReasonTypeName[0:7]:        UserReasonTypeProfile,
	_UserReasonTypeLowerName[0:7]:   UserReasonTypeProfile,
	_UserReasonTypeName[7:13]:       UserReasonTypeFriend,
	_UserReasonTypeLowerName[7:13]:  UserReasonTypeFriend,
	_UserReasonTypeName[13:19]:      UserReasonTypeOutfit,
	_UserReasonTypeLowerName[13:19]: UserReasonTypeOutfit,
	_UserReasonTypeName[19:24]:      UserReasonTypeGroup,
	_UserReasonTypeLowerName[19:24]: UserReasonTypeGroup,
	_UserReasonTypeName[24:29]:      UserReasonTypeCondo,
	_UserReasonTypeLowerName[24:29]: UserReasonTypeCondo,
	_UserReasonTypeName[29:33]:      UserReasonTypeChat,
	_UserReasonTypeLowerName[29:33]: UserReasonTypeChat,
	_UserReasonTypeName[33:42]:      UserReasonTypeFavorites,
	_UserReasonTypeLowerName[33:42]: UserReasonTypeFavorites,
	_UserReasonTypeName[42:48]:      UserReasonTypeBadges,
	_UserReasonTypeLowerName[42:48]: UserReasonTypeBadges,
	_UserReasonTypeName[48:57]:      UserReasonTypeCreations,
	_UserReasonTypeLowerName[48:57]: UserReasonTypeCreations,
	_UserReasonTypeName[57:63]:      UserReasonTypeOthers,
	_UserReasonTypeLowerName[57:63]: UserReasonTypeOthers,
}

var _UserReasonTypeNames = []string{
	_UserReasonTypeName[0:7],
	_UserReasonTypeName[7:13],
	_UserReasonTypeName[13:19],
	_UserReasonTypeName[19:24],
	_UserReasonTypeName[24:29],
	_UserReasonTypeName[29:33],
	_UserReasonTypeName[33:42],
	_UserReasonTypeName[42:48],
	_UserReasonTypeName[48:57],
	_UserReasonTypeName[57:63],
}

// UserReasonTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func UserReasonTypeString(s string) (UserReasonType, error) {
	if val, ok := _UserReasonTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _UserReasonTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to UserReasonType values", s)
}

// UserReasonTypeValues returns all values of the enum
func UserReasonTypeValues() []UserReasonType {
	return _UserReasonTypeValues
}

// UserReasonTypeStrings returns a slice of all String values of the enum
func UserReasonTypeStrings() []string {
	strs := make([]string, len(_UserReasonTypeNames))
	copy(strs, _UserReasonTypeNames)
	return strs
}

// IsAUserReasonType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i UserReasonType) IsAUserReasonType() bool {
	for _, v := range _UserReasonTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
